server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: cityfix-api
  profiles:
    active: dev

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/cityfix}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        # Optional; Hibernate picks PostgreSQL automatically from the JDBC URL
        dialect: org.hibernate.dialect.PostgreSQLDialect

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASS:guest}
    virtual-host: ${RABBITMQ_VHOST:/}

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true   # ok for your current DB; on a fresh DB you can set false

app:
  security:
    jwt:
      # Use a long dev fallback so the app still boots if JWT_SECRET isn't set (â‰¥ 32 bytes for HS256).
      secret: ${JWT_SECRET:dev-secret-please-change-me-0123456789abcdef0123456789abcd}
      expires-in-seconds: ${JWT_EXPIRES:86400}   # 24h

  storage:
    upload-dir: ${FILE_UPLOAD_DIR:${user.home}/cityfix_uploads}