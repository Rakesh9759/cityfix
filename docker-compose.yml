services:
  postgres:
    image: postgis/postgis:15-3.4
    platform: linux/amd64
    container_name: cityfix-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASS:-postgres}
      POSTGRES_DB: cityfix
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d cityfix"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: cityfix-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 20s

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: cityfix-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitdata:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 30s

  localstack:
    image: localstack/localstack:3.2
    container_name: cityfix-localstack
    ports:
      - "4566:4566"
    environment:
      SERVICES: s3,ses,ssm
      DEBUG: "0"
      AWS_DEFAULT_REGION: ${AWS_REGION}
      PERSISTENCE: "1"
    volumes:
      - "localstack_data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:4566/_localstack/health >/dev/null || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 50
      start_period: 30s

volumes:
  pgdata:
  redisdata:
  rabbitdata:
  localstack_data:

